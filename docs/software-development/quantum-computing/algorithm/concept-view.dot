digraph "Quantum Computing Algorithms Concepts" {
  labelloc= "t"
  label="Quantum Computing Algorithms Concepts"

  layout=dot
software_development_quantum_computing_algorithm__bernstein_vazirani_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Bernstein-Vazirani Algorithm</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm that determines a<BR/>hidden binary string with a single query<BR/>to the oracle. </I></FONT>>]
software_development_quantum_computing_algorithm__quantum_phase_estimation [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Quantum Phase Estimation</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm that estimates the<BR/>eigenvalues of a unitary operator, used<BR/>in many quantum algorithms. </I></FONT>>]
software_development_quantum_computing_algorithm__shor_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Shor&apos;s Algorithm</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm for integer<BR/>factorization that runs in polynomial<BR/>time, breaking RSA encryption. </I></FONT>>]
software_development_quantum_computing_algorithm__quantum_fourier_transform [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Quantum Fourier Transform</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm that performs the<BR/>discrete Fourier transform on quantum<BR/>states, crucial for many quantum<BR/>algorithms, including Shor&apos;s algorithm. </I></FONT>>]
software_development_quantum_computing_algorithm__classical_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Classical Algorithm</B><BR/><FONT POINT-SIZE="10"><I>runs on classical computers, using<BR/>classical bits. </I></FONT>>]
software_development_quantum_computing_algorithm__algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Algorithm</B><BR/><FONT POINT-SIZE="10"><I>a set of rules or instructions to solve<BR/>a problem or perform a task. </I></FONT>>]
software_development_quantum_computing_algorithm__hhl_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>HHL Algorithm</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm for solving linear<BR/>systems of equations, providing<BR/>exponential speedup over classical<BR/>algorithms. </I></FONT>>]
software_development_quantum_computing_algorithm__deutsch_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Deutsch Algorithm</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm that solves the<BR/>Deutsch problem, determining if a<BR/>function is constant or balanced with<BR/>one query. </I></FONT>>]
software_development_quantum_computing_algorithm__hybrid_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Hybrid Algorithm</B><BR/><FONT POINT-SIZE="10"><I>combines classical and quantum computing<BR/>techniques, leveraging the strengths of<BR/>both classical and quantum computers. </I></FONT>>]
software_development_quantum_computing_algorithm__variational_quantum_eigensolver [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Variational Quantum Eigensolver</B><BR/><FONT POINT-SIZE="10"><I>A hybrid quantum-classical algorithm for<BR/>finding the ground state energy of a<BR/>quantum system. </I></FONT>>]
software_development_quantum_computing_algorithm__grover_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Grover&apos;s Algorithm</B><BR/><FONT POINT-SIZE="10"><I>A quantum algorithm that searches an<BR/>unsorted database with quadratic speedup<BR/>over classical algorithms. </I></FONT>>]
software_development_quantum_computing_algorithm__quantum_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Quantum Algorithm</B><BR/><FONT POINT-SIZE="10"><I>designed to run on quantum computers,<BR/>utilizing quantum bits (qubits) and<BR/>quantum phenomena. </I></FONT>>]
 
software_development_quantum_computing_algorithm__shor_algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__algorithm -> software_development_quantum_computing_algorithm__classical_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
software_development_quantum_computing_algorithm__hhl_algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__bernstein_vazirani_algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__hybrid_algorithm -> software_development_quantum_computing_algorithm__classical_algorithm [label=<uses<BR/><FONT POINT-SIZE="10"><I>incorporates classical algorithms in its<BR/>execution </I></FONT>>]
software_development_quantum_computing_algorithm__variational_quantum_eigensolver -> software_development_quantum_computing_algorithm__hybrid_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__algorithm -> software_development_quantum_computing_algorithm__hybrid_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
software_development_quantum_computing_algorithm__hybrid_algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<uses<BR/><FONT POINT-SIZE="10"><I>incorporates quantum algorithms in its<BR/>execution </I></FONT>>]
software_development_quantum_computing_algorithm__quantum_phase_estimation -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
software_development_quantum_computing_algorithm__quantum_fourier_transform -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__grover_algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_quantum_computing_algorithm__deutsch_algorithm -> software_development_quantum_computing_algorithm__quantum_algorithm [label=<is a<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
 
}

// (generated by Overarch with template views/view.dot.cmb)
