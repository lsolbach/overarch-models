digraph "Concept view for Connascence" {
  labelloc= "t"
  label="Concept view for Connascence"
  rankdir="LR"

  layout=dot
software_development_complexity_connascence__static_connascence [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Static Connascence</B><BR/><FONT POINT-SIZE="10"><I>does not depend on the runtime<BR/>attributes of the code </I></FONT>>]
software_development_complexity_connascence__connascence_of_algorithm [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Algorithm</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the algorithm used to solve a<BR/>problem </I></FONT>>]
software_development_complexity__coupling [shape=ellipse style=filled fillcolor="#dddddd" label=<<B> Coupling </B><BR/><FONT POINT-SIZE="10"><I> Coupling is the degree of<BR/>interdependence between software<BR/>modules; the strength of the<BR/>relationships between modules. </I></FONT>>]
software_development_complexity_connascence__connascence_strength [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence Strength</B><BR/><FONT POINT-SIZE="10"><I>measures the strength of the<BR/>relationship between two software<BR/>modules </I></FONT>>]
software_development_complexity_connascence__connascence_of_meaning [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Meaning</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the meaning of a variable,<BR/>constant, or method. </I></FONT>>]
software_development_complexity_connascence__dynamic_connascence [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Dynamic Connascence</B><BR/><FONT POINT-SIZE="10"><I>depends on the runtime attributes of the<BR/>cod </I></FONT>>]
software_development_complexity_connascence__connascence_of_position [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Position</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the position of a variable,<BR/>constant, or method </I></FONT>>]
software_development_complexity_connascence__connascence_locality [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence Locality</B><BR/><FONT POINT-SIZE="10"><I>measures the locality of connascence<BR/>between two software modules </I></FONT>>]
software_development_complexity_connascence__connascence_of_name [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Name</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the name of a variable,<BR/>constant, or method </I></FONT>>]
software_development_complexity_connascence__connascence_degree [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence Degree</B><BR/><FONT POINT-SIZE="10"><I>measures the degree of coupling between<BR/>two software modules </I></FONT>>]
software_development_complexity_connascence__connascence_of_type [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Type</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the type of a variable,<BR/>constant, or method </I></FONT>>]
software_development_complexity_connascence__connascence_of_execution [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Execution</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the order in which they are<BR/>executed </I></FONT>>]
software_development_complexity_connascence__connascence_of_time [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Time</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the timing of an event </I></FONT>>]
software_development_complexity_connascence__connascence_of_identity [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Identity</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the identity of an object </I></FONT>>]
software_development_complexity_connascence__connascence_of_value [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence of Value</B><BR/><FONT POINT-SIZE="10"><I>occurs when two or more modules must<BR/>agree on the value of a variable,<BR/>constant, or method </I></FONT>>]
software_development_complexity_connascence__connascence [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Connascence</B><BR/><FONT POINT-SIZE="10"><I>A software quality metric that measures<BR/>the degree of coupling between software<BR/>modules </I></FONT>>]
 
software_development_complexity_connascence__connascence_of_value -> software_development_complexity_connascence__dynamic_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of connascence. </I></FONT>>]
software_development_complexity_connascence__dynamic_connascence -> software_development_complexity_connascence__connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>form of </I></FONT>>]
software_development_complexity_connascence__connascence_of_type -> software_development_complexity_connascence__static_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
software_development_complexity_connascence__connascence_of_name -> software_development_complexity_connascence__static_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
software_development_complexity_connascence__connascence_degree -> software_development_complexity_connascence__connascence [label=<is a measure of<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_complexity_connascence__connascence_of_algorithm -> software_development_complexity_connascence__static_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of connascence. </I></FONT>>]
software_development_complexity_connascence__connascence_of_meaning -> software_development_complexity_connascence__static_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
software_development_complexity_connascence__connascence_of_time -> software_development_complexity_connascence__dynamic_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of connascence. </I></FONT>>]
software_development_complexity_connascence__connascence -> software_development_complexity__coupling [label=<measure of<BR/><FONT POINT-SIZE="10"><I>coupling between software modules </I></FONT>>]
software_development_complexity_connascence__static_connascence -> software_development_complexity_connascence__connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>form of </I></FONT>>]
software_development_complexity_connascence__connascence_strength -> software_development_complexity_connascence__connascence [label=<is a measure of<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_complexity_connascence__connascence_of_execution -> software_development_complexity_connascence__dynamic_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of connascence. </I></FONT>>]
software_development_complexity_connascence__connascence_locality -> software_development_complexity_connascence__connascence [label=<is a measure of<BR/><FONT POINT-SIZE="10"><I>Connascence Locality is a measure of the<BR/>locality of connascence between two<BR/>software modules. </I></FONT>>]
software_development_complexity_connascence__connascence_of_identity -> software_development_complexity_connascence__dynamic_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of connascence. </I></FONT>>]
software_development_complexity_connascence__connascence_of_position -> software_development_complexity_connascence__static_connascence [label=<is a<BR/><FONT POINT-SIZE="10"><I>type of </I></FONT>>]
 
}

// (generated by Overarch with template views/view.dot.cmb)
