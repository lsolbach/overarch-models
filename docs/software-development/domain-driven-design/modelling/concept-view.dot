digraph "Concept Map of the Domain Driven Design Putting the Model To Work Patterns" {
  labelloc= "t"
  label="Concept Map of the Domain Driven Design Putting the Model To Work Patterns"
  rankdir="LR"

  layout=dot
software_development_domain_driven_design_modelling__c_hands_on_modellers [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Hands On Modellers</B><BR/><FONT POINT-SIZE="10"><I>Developers must be involved with the<BR/>model and have contact with domain<BR/>experts. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_value_objects [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Value Objects</B><BR/><FONT POINT-SIZE="10"><I>An object in the domain model, which has<BR/>no conceptional identity but are<BR/>identified by their state. Value objects<BR/>should be modelled as immutable. </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Bounded Context</B><BR/><FONT POINT-SIZE="10"><I>A descrition of a boundary (typically a<BR/>subsystem or the work of a particular<BR/>team) within which a particular model is<BR/>defined and applicable. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_services [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Services</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Model Driven Design</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_ubiquitous_language [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Ubiquitous Language</B><BR/><FONT POINT-SIZE="10"><I>A language around the domain model used<BR/>by all team members within a bounded<BR/>context to connect all the activities of<BR/>the team with the software. </I></FONT>>]
software_development_domain_driven_design__c_clean_architecture [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Clean Architecture</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_continuous_integration [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Continuous Integration</B><BR/><FONT POINT-SIZE="10"><I>A process of merging all code and other<BR/>implementation artifacts frequently,<BR/>with automated tests to flag<BR/>fragmentation quickly. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Entities</B><BR/><FONT POINT-SIZE="10"><I>Objects in the domain model which are<BR/>defined by their identity rather than by<BR/>their state. For example a Person is<BR/>normally modelled as an entity. It<BR/>represents the same person even when the<BR/>attributes change. It is also a<BR/>different person, even if it has the<BR/>same state as another person. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_domain_events [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Domain Events</B><BR/><FONT POINT-SIZE="10"><I>A domain object to propagate relevant<BR/>domain activities in a distributed<BR/>system. </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Core Domain</B><BR/><FONT POINT-SIZE="10"><I>The most valuable part of the domain<BR/>model. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Context Map</B><BR/><FONT POINT-SIZE="10"><I> The context map provides an overview<BR/>for all models and their boundaries and<BR/>interfaces. </I></FONT>>]
 
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_modelling__c_bounded_context [label=<work in autonomous, clean<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_modelling__c_bounded_context [label=<define model within<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_domain_events [label=<express change with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_modelling__c_ubiquitous_language [label=<culivate rich model with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_modelling__c_ubiquitous_language [label=<model gives structure to<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context -> software_development_domain_driven_design_modelling__c_ubiquitous_language [label=<names enter<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context -> software_development_domain_driven_design_context_mapping__c_context_map [label=<assess/overview relationships with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_services [label=<express model with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_value_objects [label=<express state and computation with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design__c_clean_architecture [label=<isolate domain expressions with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context -> software_development_domain_driven_design_modelling__c_continuous_integration [label=<keep model unified with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_entities [label=<express identity with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
 
}

// (generated by Overarch with template views/view.dot.cmb)
