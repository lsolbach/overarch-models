digraph "Concept Map of the Domain Driven Design Patterns" {
  labelloc= "t"
  label="Concept Map of the Domain Driven Design Patterns"
  rankdir="LR"

  layout=dot
software_development_domain_driven_design_context_mapping__c_published_language [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Published Language</B><BR/><FONT POINT-SIZE="10"><I>A well-documented shared language that<BR/>can express the necessary domain<BR/>information as a common medium of<BR/>communication, translating as necessary<BR/>into and out of that language. </I></FONT>>]
software_development_domain_driven_design__c_context [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Context</B><BR/><FONT POINT-SIZE="10"><I>The setting in which a word or statement<BR/>appears that determines its meaning.<BR/>Statements about a model can only be<BR/>understood in a context. </I></FONT>>]
software_development_domain_driven_design_distillation__c_cohesive_mechanisms [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Cohesive Mechanisms</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_hands_on_modellers [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Hands On Modellers</B><BR/><FONT POINT-SIZE="10"><I>Developers must be involved with the<BR/>model and have contact with domain<BR/>experts. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_anti_corruption_layer [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Anti-Corruption Layer</B><BR/><FONT POINT-SIZE="10"><I>The anti-corruption layer is an<BR/>architectural layer to separate the<BR/>domain model from outside models. It<BR/>enables the domain model to access the<BR/>data of the outside model as expected by<BR/>the domain model. In a clean<BR/>architecture, an adapter is the place to<BR/>implement the anti- corruption layer by<BR/>mapping the outside model to the domain<BR/>model. </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_system_metaphor [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>System Metaphor</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_big_ball_of_mud [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Big Ball of Mud</B><BR/><FONT POINT-SIZE="10"><I>A Big Ball of Mud is a casually, even<BR/>haphazardly, structured system. Its<BR/>organization, if one can call it that,<BR/>is dictated more by expediency than<BR/>design. Yet, its enduring popularity<BR/>cannot merely be indicative of a general<BR/>disregard for architecture. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_modules [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Modules</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_conformist [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Conformist</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_value_objects [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Value Objects</B><BR/><FONT POINT-SIZE="10"><I>An object in the domain model, which has<BR/>no conceptional identity but are<BR/>identified by their state. Value objects<BR/>should be modelled as immutable. </I></FONT>>]
software_development_domain_driven_design__large_scale_structure [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Large-scale Structure</B><BR/><FONT POINT-SIZE="10"><I>Part VI: Large-scale Structure for<BR/>Strategic Design </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Bounded Context</B><BR/><FONT POINT-SIZE="10"><I>A descrition of a boundary (typically a<BR/>subsystem or the work of a particular<BR/>team) within which a particular model is<BR/>defined and applicable. </I></FONT>>]
software_development_domain_driven_design__domain_driven_design [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Domain Driven Design</B><BR/><FONT POINT-SIZE="10"><I>An approach to the development of<BR/>complex software in which we focus on<BR/>the core domain, explore models in a<BR/>creative collaboration of domain<BR/>practitioners and software<BR/>practitioners, and speak a ubiquitous<BR/>language within an explicitly bounded<BR/>context. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_partnership [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Partnership</B><BR/><FONT POINT-SIZE="10"><I>A partnership between the teams in<BR/>charge of the two contexts, when the<BR/>teams will succeed or fail together. </I></FONT>>]
software_development_domain_driven_design__supple_design [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Supple Design</B><BR/><FONT POINT-SIZE="10"><I>Part III: Supple Design </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_responsibility_layers [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Responsibility Layers</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design__building_blocks [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Building Blocks</B><BR/><FONT POINT-SIZE="10"><I>Part II: The Building Blocks of a<BR/>Model-Driven Design </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_repositories [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Repositories</B><BR/><FONT POINT-SIZE="10"><I>Query access to aggregates expressed in<BR/>the ubiquitous language </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_evolving_order [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Evolving Order</B><BR/><FONT POINT-SIZE="10"><I>A conceptual large-scale structure that<BR/>evolves with the application, possibly<BR/>changing to a completely different type<BR/>of structure along the way. </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Model Driven Design</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_customer_supplier [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Customer/Supplier</B><BR/><FONT POINT-SIZE="10"><I>A clear relationship between two teams,<BR/>where the downstream team is the<BR/>customer of the upstream team. </I></FONT>>]
software_development_domain_driven_design_modelling__c_ubiquitous_language [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Ubiquitous Language</B><BR/><FONT POINT-SIZE="10"><I>A language around the domain model used<BR/>by all team members within a bounded<BR/>context to connect all the activities of<BR/>the team with the software. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_separate_ways [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Separate Ways</B><BR/><FONT POINT-SIZE="10"><I>A bounded context with no connection to<BR/>the others at all, allowing developers<BR/>to find simple, specialized solutions<BR/>within this small scope. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_services [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Services</B><BR/><FONT POINT-SIZE="10"><I>contains functionality which is not the<BR/>responsiblity of an entity or value<BR/>object </I></FONT>>]
software_development_domain_driven_design__c_clean_architecture [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Clean Architecture</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design__context_mapping [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Context Mapping</B><BR/><FONT POINT-SIZE="10"><I>Part IV: Context Mapping for Strategic<BR/>Design </I></FONT>>]
software_development_domain_driven_design_distillation__c_segregated_core [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Segregated Core</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_continuous_integration [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Continuous Integration</B><BR/><FONT POINT-SIZE="10"><I>A process of merging all code and other<BR/>implementation artifacts frequently,<BR/>with automated tests to flag<BR/>fragmentation quickly. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Entities</B><BR/><FONT POINT-SIZE="10"><I>Objects in the domain model which are<BR/>defined by their identity rather than by<BR/>their state. For example a Person is<BR/>normally modelled as an entity. It<BR/>represents the same person even when the<BR/>attributes change. It is also a<BR/>different person, even if it has the<BR/>same state as another person. </I></FONT>>]
software_development_domain_driven_design__c_model [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Model</B><BR/><FONT POINT-SIZE="10"><I>A system of abstractions that describes<BR/>selected aspects of a domain and can be<BR/>used to solve problems related to that<BR/>domain. </I></FONT>>]
software_development_domain_driven_design__c_domain [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Domain</B><BR/><FONT POINT-SIZE="10"><I>A sphere of knowledge, influence or<BR/>activity. The subject area to which a<BR/>user applies a program is the domain of<BR/>the software. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_domain_events [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Domain Events</B><BR/><FONT POINT-SIZE="10"><I>A domain object to propagate relevant<BR/>domain activities in a distributed<BR/>system. </I></FONT>>]
software_development_domain_driven_design_distillation__c_highlighted_core [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Highlighted Core</B><BR/><FONT POINT-SIZE="10"><I>Describes the core elements of the<BR/>domain and their interactions. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_factories [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Factories</B><BR/><FONT POINT-SIZE="10"><I>A domain object for the creation of<BR/>complex domain objects which enforce the<BR/>invariants of these objects on creation. </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Core Domain</B><BR/><FONT POINT-SIZE="10"><I>The most valuable part of the domain<BR/>model. </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_aggregates [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Aggregates</B><BR/><FONT POINT-SIZE="10"><I>Aggregates are collections of entities<BR/>and value objects with their<BR/>associations and form a transactional<BR/>unit. Aggregates are referenced as a<BR/>whole by an aggregate root entity, parts<BR/>of the aggregate must not be referenced<BR/>from outside. The aggregate root is<BR/>responsible for the enforcement of the<BR/>busines rules and invariants of the<BR/>aggregate. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Context Map</B><BR/><FONT POINT-SIZE="10"><I> The context map provides an overview<BR/>for all models and their boundaries and<BR/>interfaces. </I></FONT>>]
software_development_domain_driven_design__free [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>free</B><BR/><FONT POINT-SIZE="10"><I>A software development context in which<BR/>the direction, success or failure of<BR/>development work in other contexts has<BR/>little effect on delivery. </I></FONT>>]
software_development_domain_driven_design__c_layered_archtecture [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Layered Architecture</B><BR/><FONT POINT-SIZE="10"><I>Isolates the expression of the domain<BR/>model and the business logic, and<BR/>eliminates any dependency on<BR/>infrastructure, user interface, or<BR/>application logic that is not business<BR/>logic. </I></FONT>>]
software_development_domain_driven_design_distillation__c_generic_subdomains [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Generic Subdomains</B><BR/><FONT POINT-SIZE="10"><I>A cohesive subdomain that is not the<BR/>motivation for the project and does not<BR/>capoure specialized knowledge. </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_large_scale_structure [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Large Scale Structure</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design__distillation [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Distillation</B><BR/><FONT POINT-SIZE="10"><I>Part V: Distillation for Strategic<BR/>Design </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_knowledge_level [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Knowledge-level</B><BR/><FONT POINT-SIZE="10"><I>A distinct set of objects that can be<BR/>used to describe and constrain the<BR/>structure and behavior of the basic<BR/>model. </I></FONT>>]
software_development_domain_driven_design_distillation__c_abstract_core [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Abstract Core</B><BR/><FONT POINT-SIZE="10"><I>The most fundamental differentiating<BR/>concepts in the model, factored into<BR/>distinct classes, abstract classes, or<BR/>interfaces. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_shared_kernel [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Shared Kernel</B><BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_domain_vision_statement [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Domain Vision Statement</B><BR/><FONT POINT-SIZE="10"><I>A short description of the core domain<BR/>and the value it will bring. </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_open_host_service [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Open Host Service</B><BR/><FONT POINT-SIZE="10"><I>An open protocol that gives access to<BR/>your subsystem as a set of services. </I></FONT>>]
software_development_domain_driven_design__upstream_downstream [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>upsteam-downstream</B><BR/><FONT POINT-SIZE="10"><I>A relationship between two groups in<BR/>which the “upstream” group’s actions<BR/>affect project success of the<BR/>“downstream” group, but the actions of<BR/>the downstream do not significantly<BR/>affect projects upstream. </I></FONT>>]
software_development_domain_driven_design__putting_the_model_to_work [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Putting the Model to Work</B><BR/><FONT POINT-SIZE="10"><I>Part I: Putting the Model to Work </I></FONT>>]
software_development_domain_driven_design__mutually_dependent [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>mutually dependent</B><BR/><FONT POINT-SIZE="10"><I>A situation in which two software<BR/>development projects in separate<BR/>contexts must both be delivered in order<BR/>for either to be considered a success. </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_pluggable_component_framework [shape=ellipse style=filled fillcolor="#dddddd" label=<<B>Pluggable Component Framework</B><BR/><FONT POINT-SIZE="10"><I>A framework that allows diverse<BR/>implementations of those interfaces to<BR/>be freely substituted. </I></FONT>>]
 
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_conformist [label=<overlap unilaterally as<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities -> software_development_domain_driven_design_building_blocks__c_aggregates [label=<encapsulate with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_anti_corruption_layer [label=<translate and isolate unilaterally with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_distillation__c_generic_subdomains [label=<avoid overinvesting in<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_value_objects -> software_development_domain_driven_design_building_blocks__c_aggregates [label=<encapsulate with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities -> software_development_domain_driven_design_building_blocks__c_domain_events [label=<push state change with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities -> software_development_domain_driven_design_building_blocks__c_repositories [label=<access with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_big_ball_of_mud [label=<seggregate the conceptual messes<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_modelling__c_bounded_context [label=<work in autonomous, clean<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_modelling__c_bounded_context [label=<define model within<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_aggregates -> software_development_domain_driven_design_building_blocks__c_repositories [label=<access with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_open_host_service -> software_development_domain_driven_design_context_mapping__c_published_language [label=<formalized as<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_open_host_service [label=<support multiple clients through<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_value_objects -> software_development_domain_driven_design_building_blocks__c_factories [label=<encapsulate with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities -> software_development_domain_driven_design_building_blocks__c_aggregates [label=<act as root of<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_domain_events [label=<express change with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_large_scale_structure__c_evolving_order [label=<structure through<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_modelling__c_ubiquitous_language [label=<culivate rich model with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_distillation__c_core_domain -> software_development_domain_driven_design_distillation__c_domain_vision_statement [label=<point the way with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_modelling__c_ubiquitous_language [label=<model gives structure to<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context -> software_development_domain_driven_design_modelling__c_ubiquitous_language [label=<names enter<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_entities -> software_development_domain_driven_design_building_blocks__c_factories [label=<encapsulate with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context -> software_development_domain_driven_design_context_mapping__c_context_map [label=<assess/overview relationships with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_customer_supplier [label=<coordinate upstream/downstream<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_separate_ways [label=<free teams to go<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_large_scale_structure__c_evolving_order -> software_development_domain_driven_design_distillation__c_core_domain [label=<concepts enter<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_services [label=<express model with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_value_objects [label=<express state and computation with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design__c_clean_architecture [label=<isolate domain expressions with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_partnership [label=<coordinate interdependent contexts<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_context_mapping__c_context_map -> software_development_domain_driven_design_context_mapping__c_shared_kernel [label=<overlap contexts<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_bounded_context -> software_development_domain_driven_design_modelling__c_continuous_integration [label=<keep model unified with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_modelling__c_model_driven_design -> software_development_domain_driven_design_building_blocks__c_entities [label=<express identity with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
software_development_domain_driven_design_building_blocks__c_aggregates -> software_development_domain_driven_design_building_blocks__c_factories [label=<encapsulate with<BR/><FONT POINT-SIZE="10"><I> </I></FONT>>]
 
}

// (generated by Overarch with template views/view.dot.cmb)
